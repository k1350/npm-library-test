on:
  push:
    tags:
      - 'v*.*.*'
jobs:
  release:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          registry-url: 'https://npm.pkg.github.com'
      - run: corepack enable pnpm
      - name: Set output
        id: vars
        run: |
          echo "tag=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          echo "next=${{ contains(github.ref_name, 'next') }}" >> $GITHUB_OUTPUT
      - name: Check output
        run: |
          echo ${{ steps.vars.outputs.tag }}
          echo ${{ steps.vars.outputs.next }}
          echo ${{ steps.vars.outputs.next == 'false' }}
          echo ${{ steps.vars.outputs.next != 'false' }}
      - name: Cache Dependency
        uses: actions/cache@v4
        id: cache_dependency_id
        env:
          cache-name: cache-dependency
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('.node-version') }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-node-${{ env.cache-name }}
      - if: ${{ steps.cache_dependency_id.outputs.cache-hit != 'true' }}
        run: pnpm install --frozen-lockfile
        env:
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: pnpm run build
      - if: ${{ steps.vars.outputs.next == 'false' }}
        name: Publish latest
        run: pnpm publish
        env:
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if: ${{ steps.vars.outputs.next != 'false' }}
        name: Publish next
        run: pnpm publish --tag next
        env:
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
